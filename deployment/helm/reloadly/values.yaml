# Default values for thingverse.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  pullPolicy: Always

persistence:
  enabled: true
  storageClass: hostpath

reloadly:
  aws:
    awsAccessKeyId: "XXX"
    awsSecretAccessKey: "YYY"
  env: "dev"
  ingress:
    enabled: false
  logging:
    rootLoggerLevel: "ERROR"
    logToContainerConsole: "true"
    logPath: "/var/log/reloadly"
  adminApp:
    resources: { }
    service:
      type: "NodePort"
    http:
      port: 9595
    needed: true
    serverurl: "http://thingverse-admin.thingverse.svc.cluster.local:9595"
    replicaCount: 1
    image:
      repository: "ghcr.io/arunkpatra/admin-service"
      tag: "latest"
  authApp:
    tracing:
      enabled: true
      transmitSpan: true
      reporterLogSpans: true
      maxQueueSize: 100
      flushInterval: 2000
    dbUser: "root"
    dbPassword: "mysqlpass123"
    dbUrl: "jdbc:mysql://mysql.mysql.svc.cluster.local:3306/rlauthdb"
    service:
      type: "NodePort"
    http:
      port: 9090
    image:
      repository: "ghcr.io/arunkpatra/authentication-service"
      tag: "latest"
    replicaCount: 1
    resources: { }
  accountApp:
    tracing:
      enabled: true
      transmitSpan: true
      reporterLogSpans: true
      maxQueueSize: 100
      flushInterval: 2000
    dbUser: "root"
    dbPassword: "mysqlpass123"
    dbUrl: "jdbc:mysql://mysql.mysql.svc.cluster.local:3306/rlacctdb"
    service:
      type: "NodePort"
    http:
      port: 8080
    image:
      repository: "ghcr.io/arunkpatra/account-service"
      tag: "latest"
    replicaCount: 1
    resources: { }
  transactionApp:
    tracing:
      enabled: true
      transmitSpan: true
      reporterLogSpans: true
      maxQueueSize: 100
      flushInterval: 2000
    dbUser: "root"
    dbPassword: "mysqlpass123"
    dbUrl: "jdbc:mysql://mysql.mysql.svc.cluster.local:3306/rltxndb"
    service:
      type: "NodePort"
    http:
      port: 8081
    image:
      repository: "ghcr.io/arunkpatra/transaction-service"
      tag: "latest"
    replicaCount: 1
    resources: { }
  notificationApp:
    email:
      dryRun: true
      senderEmailId: "email@email.com"
    sms:
      dryRun: true
      twilioMsgSvcId: "XXX"
      twilioAccountSID: "YYY"
      twilioAuthToken: "ZZZ"
    tracing:
      enabled: true
      transmitSpan: true
      reporterLogSpans: true
      maxQueueSize: 100
      flushInterval: 2000
    service:
      type: "NodePort"
    http:
      port: 8082
    image:
      repository: "ghcr.io/arunkpatra/notification-service"
      tag: "latest"
    replicaCount: 1
    resources: { }
  transactionProcApp:
    svcActApiKey: "d3fe6f0d-120e-4161-a134-8c2342e36ca6"
    tracing:
      enabled: true
      transmitSpan: true
      reporterLogSpans: true
      maxQueueSize: 100
      flushInterval: 2000
    dbUser: "root"
    dbPassword: "mysqlpass123"
    dbUrl: "jdbc:mysql://mysql.mysql.svc.cluster.local:3306/rltxndb"
    service:
      type: "NodePort"
    http:
      port: 8083
    image:
      repository: "ghcr.io/arunkpatra/transaction-processor"
      tag: "latest"
    replicaCount: 1
    resources: { }

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "reloadly-svc-account"

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

ingress:
  enabled: false
  annotations: { }
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: [ ]
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }
